#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using namespace std;

void displayMenu() {
    cout << "To-Do List Menu:" << endl;
    cout << "1. Add a Task" << endl;
    cout << "2. View Tasks" << endl;
    cout << "3. Delete a Task" << endl;
    cout << "4. Exit" << endl;
}

void addTask() {
    ofstream outFile("todo.txt", ios::app);
    if (!outFile) {
        cerr << "Error opening file!" << endl;
        return;
    }
    string task;
    cout << "Enter the task: ";
    cin.ignore();
    getline(cin, task);
    outFile << task << endl;
    outFile.close();
    cout << "Task added!" << endl;
}

void viewTasks() {
    ifstream inFile("todo.txt");
    if (!inFile) {
        cerr << "Error opening file!" << endl;
        return;
    }
    string task;
    cout << "Tasks:" << endl;
    int index = 1;
    while (getline(inFile, task)) {
        cout << index++ << ". " << task << endl;
    }
    inFile.close();
}

void deleteTask() {
    ifstream inFile("todo.txt");
    if (!inFile) {
        cerr << "Error opening file!" << endl;
        return;
    }
    
    vector<string> tasks;
    string task;
    while (getline(inFile, task)) {
        tasks.push_back(task);
    }
    inFile.close();
    
    if (tasks.empty()) {
        cout << "No tasks to delete." << endl;
        return;
    }
    
    viewTasks();
    
    int taskNumber;
    cout << "Enter the number of the task to delete: ";
    cin >> taskNumber;
    
    if (taskNumber < 1 || taskNumber > tasks.size()) {
        cout << "Invalid task number." << endl;
        return;
    }
    
    tasks.erase(tasks.begin() + taskNumber - 1);
    
    ofstream outFile("todo.txt");
    if (!outFile) {
        cerr << "Error opening file!" << endl;
        return;
    }
    for (const auto& t : tasks) {
        outFile << t << endl;
    }
    outFile.close();
    
    cout << "Task deleted!" << endl;
}

int main() {
    int choice;
    do {
        displayMenu();
        cout << "Enter your choice: ";
        cin >> choice;
        
        switch (choice) {
            case 1:
                addTask();
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                deleteTask();
                break;
            case 4:
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
        
    } while (choice != 4);
    
    return 0;
}
